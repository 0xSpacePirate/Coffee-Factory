using com.apama.correlator.Component;

/** This monitor is responsible for checking if there are any issues with the data */

event FreezerTemperature{
	float currentFreezerTemp;
}

monitor Freezer {
	
	float currentFreezerTemp;
	boolean flag := false; //When using the random variable we either decrease or
	//increase the current freezer temperature, using this variable we set the turns;

	action onload() {
		log Message.LOADED_FREEZER at INFO;
		updateVariables();
		freeze();
	}
	
	action freeze(){
		listener listen := on all wait (3.0){
			Component.setUserStatus(UserStatus.FREEZER_TEMP, currentFreezerTemp.toString()); // send freezer data to Prometheus;
		}
	}
	
	action updateVariables(){
		monitor.subscribe(Channel.FREEZE); // Channel on which we listen for updates;
		updateFreezerTemp();
	}
	
	/**
		Listens to the Freeze channel and updates the data correspondingly;
	*/
	action updateFreezerTemp(){
		on all FreezerTemperature() as ft{
			currentFreezerTemp := ft.currentFreezerTemp;
		}
	}
	
}